FIXME  本周任务
        执行顺序是否需要修改 选择 -- 交叉 -- 变异 -- 校验
        det()的计算,横纵坐标进一步了解、




TODO   这周的学习进展：
        1.限制性锦标赛选择算子实现
        2.确定性拥挤算子实现 (部分)

            执行顺序和相似性的选取：（多样性 + 适应值）
                选择 -- 交叉 -- 变异 -- 校验

                选择 -- 交叉 -- 小生境 -- 校验

        3.性能对比（①覆盖50%的时间;  ②迭代过程中个体的最大相似数）


TODO 伪代码：确定性拥挤算子
public  void DET(paperGeneticTmp,i) {

         // 1.有放回的随机选取两个父代个体: p1 p2
         p1 = paperGenetic[index1]
         p2 = paperGenetic[index1]

         // 2.父代交叉、变异，产生新个体：c1 c2
         crossMutateDet(p1, p2)

         // 3.替换(采用拥挤思想来决定下一代)
         closestResembleDet(p1, p2, c1, c2)

             // 3.1.选取表现型做相似性校验,并替换 [d(p1,c1)+d(p2,c2)]<=[d(p1,c2)+d(p2,c1)]
             similarPhenDet()  (1,3,56,34,67...)  (1,32,52,31,67...)
                if(flag){
                    f(c1)>f(p1)?替换：不替换
                }else{
                    f(c1)>f(p2)?替换：不替换
                }


}


TODO 伪代码：限制性选择锦标赛选择算子RTS (Georges R. Harik,1995)
 public  void RTS(paperGeneticTmp,i) {

        // 1.父代变异产生新个体c1
        mutate(paperGenetic[i])

        // 2.为c1从当前种群中随机选取c*w个体  c小生境数 w 10
        championship()

        // 3.替换
        closestResembleRTS(c1, cwList)

            // 3.1.选取表现型做相似性校验,并替换
            similarPhenRTS()


 }





